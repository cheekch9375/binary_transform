#include <stdio.h>

int binarySearch(int arr[], int size, int target) {
    int low = 0;
    int high = size - 1;

    while (low <= high) {
        int mid = low + (high - low) / 2;

        // target을 찾은 경우
        if (arr[mid] == target) {
            return mid;
        }

        // target이 중간값보다 큰 경우
        if (arr[mid] < target) {
            low = mid + 1;
        } 
        // target이 중간값보다 작은 경우
        else {
            high = mid - 1;
        }
    }

    // target이 배열에 없는 경우
    return -1;
}

int main() {
    int arr[] = {2, 3, 4, 10, 40};
    int size = sizeof(arr) / sizeof(arr[0]);
    int target = 10;
    int result = binarySearch(arr, size, target);

    if (result != -1) {
        printf("값 %d은 인덱스 %d에 존재합니다.\n", target, result);
    } else {
        printf("값 %d은 배열에 존재하지 않습니다.\n", target);
    }

    return 0;
}
/*
코드 설명
1. binarySearch 함수는 배열 arr와 그 크기 size, 그리고 찾고자 하는 값 target을 인자로 받습니다.
2. 탐색 범위를 low와 high로 설정하고, 중간 인덱스를 계산합니다.
3. 중간값 arr[mid]를 target과 비교하여 탐색 범위를 조정합니다.
4. 값을 찾으면 해당 인덱스를 반환하고, 배열에 값이 없으면 -1을 반환합니다.
5. main 함수에서는 예제 배열과 찾고자 하는 값을 설정하고, binarySearch 함수를 호출하여 결과를 출력합니다.

*/
